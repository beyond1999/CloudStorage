// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: objectstore.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"` // host:port for ObjNodeService
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_objectstore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ChunkRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`          // content-addressed SHA256
	Index         uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`   // 第几个分片
	Stripe        uint32                 `protobuf:"varint,3,opt,name=stripe,proto3" json:"stripe,omitempty"` // 第几个纠删条带
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkRef) Reset() {
	*x = ChunkRef{}
	mi := &file_objectstore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkRef) ProtoMessage() {}

func (x *ChunkRef) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkRef.ProtoReflect.Descriptor instead.
func (*ChunkRef) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{1}
}

func (x *ChunkRef) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ChunkRef) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ChunkRef) GetStripe() uint32 {
	if x != nil {
		return x.Stripe
	}
	return 0
}

type Placement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataNodes     []*Node                `protobuf:"bytes,1,rep,name=data_nodes,json=dataNodes,proto3" json:"data_nodes,omitempty"`
	ParityNodes   []*Node                `protobuf:"bytes,2,rep,name=parity_nodes,json=parityNodes,proto3" json:"parity_nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Placement) Reset() {
	*x = Placement{}
	mi := &file_objectstore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Placement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Placement) ProtoMessage() {}

func (x *Placement) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Placement.ProtoReflect.Descriptor instead.
func (*Placement) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{2}
}

func (x *Placement) GetDataNodes() []*Node {
	if x != nil {
		return x.DataNodes
	}
	return nil
}

func (x *Placement) GetParityNodes() []*Node {
	if x != nil {
		return x.ParityNodes
	}
	return nil
}

type PutObjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bucket        string                 `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Size          uint64                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	IfNoneMatch   string                 `protobuf:"bytes,5,opt,name=if_none_match,json=ifNoneMatch,proto3" json:"if_none_match,omitempty"` // 简化：支持 If-None-Match: "*"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutObjectRequest) Reset() {
	*x = PutObjectRequest{}
	mi := &file_objectstore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutObjectRequest) ProtoMessage() {}

func (x *PutObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutObjectRequest.ProtoReflect.Descriptor instead.
func (*PutObjectRequest) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{3}
}

func (x *PutObjectRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *PutObjectRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutObjectRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PutObjectRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *PutObjectRequest) GetIfNoneMatch() string {
	if x != nil {
		return x.IfNoneMatch
	}
	return ""
}

type PutObjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutObjectResponse) Reset() {
	*x = PutObjectResponse{}
	mi := &file_objectstore_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutObjectResponse) ProtoMessage() {}

func (x *PutObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutObjectResponse.ProtoReflect.Descriptor instead.
func (*PutObjectResponse) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{4}
}

func (x *PutObjectResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type CommitObjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bucket        string                 `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	UploadId      string                 `protobuf:"bytes,3,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Chunks        []*ChunkRef            `protobuf:"bytes,4,rep,name=chunks,proto3" json:"chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitObjectRequest) Reset() {
	*x = CommitObjectRequest{}
	mi := &file_objectstore_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitObjectRequest) ProtoMessage() {}

func (x *CommitObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitObjectRequest.ProtoReflect.Descriptor instead.
func (*CommitObjectRequest) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{5}
}

func (x *CommitObjectRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *CommitObjectRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CommitObjectRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *CommitObjectRequest) GetChunks() []*ChunkRef {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type CommitObjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitObjectResponse) Reset() {
	*x = CommitObjectResponse{}
	mi := &file_objectstore_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitObjectResponse) ProtoMessage() {}

func (x *CommitObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitObjectResponse.ProtoReflect.Descriptor instead.
func (*CommitObjectResponse) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{6}
}

func (x *CommitObjectResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type AllocatePlacementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	K             uint32                 `protobuf:"varint,1,opt,name=k,proto3" json:"k,omitempty"` // data shards
	M             uint32                 `protobuf:"varint,2,opt,name=m,proto3" json:"m,omitempty"` // parity shards
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocatePlacementRequest) Reset() {
	*x = AllocatePlacementRequest{}
	mi := &file_objectstore_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocatePlacementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocatePlacementRequest) ProtoMessage() {}

func (x *AllocatePlacementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocatePlacementRequest.ProtoReflect.Descriptor instead.
func (*AllocatePlacementRequest) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{7}
}

func (x *AllocatePlacementRequest) GetK() uint32 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *AllocatePlacementRequest) GetM() uint32 {
	if x != nil {
		return x.M
	}
	return 0
}

type AllocatePlacementResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Placement     *Placement             `protobuf:"bytes,1,opt,name=placement,proto3" json:"placement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocatePlacementResponse) Reset() {
	*x = AllocatePlacementResponse{}
	mi := &file_objectstore_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocatePlacementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocatePlacementResponse) ProtoMessage() {}

func (x *AllocatePlacementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocatePlacementResponse.ProtoReflect.Descriptor instead.
func (*AllocatePlacementResponse) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{8}
}

func (x *AllocatePlacementResponse) GetPlacement() *Placement {
	if x != nil {
		return x.Placement
	}
	return nil
}

type PutChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       []byte                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Index         uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Checksum      []byte                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"` // sha256 of data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutChunkRequest) Reset() {
	*x = PutChunkRequest{}
	mi := &file_objectstore_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChunkRequest) ProtoMessage() {}

func (x *PutChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChunkRequest.ProtoReflect.Descriptor instead.
func (*PutChunkRequest) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{9}
}

func (x *PutChunkRequest) GetChunkId() []byte {
	if x != nil {
		return x.ChunkId
	}
	return nil
}

func (x *PutChunkRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PutChunkRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PutChunkRequest) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

type PutChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutChunkResponse) Reset() {
	*x = PutChunkResponse{}
	mi := &file_objectstore_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChunkResponse) ProtoMessage() {}

func (x *PutChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChunkResponse.ProtoReflect.Descriptor instead.
func (*PutChunkResponse) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{10}
}

type GetChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       []byte                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Index         uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunkRequest) Reset() {
	*x = GetChunkRequest{}
	mi := &file_objectstore_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkRequest) ProtoMessage() {}

func (x *GetChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkRequest.ProtoReflect.Descriptor instead.
func (*GetChunkRequest) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{11}
}

func (x *GetChunkRequest) GetChunkId() []byte {
	if x != nil {
		return x.ChunkId
	}
	return nil
}

func (x *GetChunkRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type GetChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunkResponse) Reset() {
	*x = GetChunkResponse{}
	mi := &file_objectstore_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkResponse) ProtoMessage() {}

func (x *GetChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objectstore_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkResponse.ProtoReflect.Descriptor instead.
func (*GetChunkResponse) Descriptor() ([]byte, []int) {
	return file_objectstore_proto_rawDescGZIP(), []int{12}
}

func (x *GetChunkResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_objectstore_proto protoreflect.FileDescriptor

const file_objectstore_proto_rawDesc = "" +
	"\n" +
	"\x11objectstore.proto\x12\x0fCloudStorage.v1\"0\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"H\n" +
	"\bChunkRef\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\x12\x16\n" +
	"\x06stripe\x18\x03 \x01(\rR\x06stripe\"{\n" +
	"\tPlacement\x124\n" +
	"\n" +
	"data_nodes\x18\x01 \x03(\v2\x15.CloudStorage.v1.NodeR\tdataNodes\x128\n" +
	"\fparity_nodes\x18\x02 \x03(\v2\x15.CloudStorage.v1.NodeR\vparityNodes\"\x97\x01\n" +
	"\x10PutObjectRequest\x12\x16\n" +
	"\x06bucket\x18\x01 \x01(\tR\x06bucket\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x04R\x04size\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\"\n" +
	"\rif_none_match\x18\x05 \x01(\tR\vifNoneMatch\"-\n" +
	"\x11PutObjectResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\x8f\x01\n" +
	"\x13CommitObjectRequest\x12\x16\n" +
	"\x06bucket\x18\x01 \x01(\tR\x06bucket\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x1b\n" +
	"\tupload_id\x18\x03 \x01(\tR\buploadId\x121\n" +
	"\x06chunks\x18\x04 \x03(\v2\x19.CloudStorage.v1.ChunkRefR\x06chunks\"0\n" +
	"\x14CommitObjectResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"6\n" +
	"\x18AllocatePlacementRequest\x12\f\n" +
	"\x01k\x18\x01 \x01(\rR\x01k\x12\f\n" +
	"\x01m\x18\x02 \x01(\rR\x01m\"U\n" +
	"\x19AllocatePlacementResponse\x128\n" +
	"\tplacement\x18\x01 \x01(\v2\x1a.CloudStorage.v1.PlacementR\tplacement\"r\n" +
	"\x0fPutChunkRequest\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\fR\achunkId\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\fR\bchecksum\"\x12\n" +
	"\x10PutChunkResponse\"B\n" +
	"\x0fGetChunkRequest\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\fR\achunkId\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\"&\n" +
	"\x10GetChunkResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data2\xaa\x02\n" +
	"\vMetaService\x12j\n" +
	"\x11AllocatePlacement\x12).CloudStorage.v1.AllocatePlacementRequest\x1a*.CloudStorage.v1.AllocatePlacementResponse\x12R\n" +
	"\tPutObject\x12!.CloudStorage.v1.PutObjectRequest\x1a\".CloudStorage.v1.PutObjectResponse\x12[\n" +
	"\fCommitObject\x12$.CloudStorage.v1.CommitObjectRequest\x1a%.CloudStorage.v1.CommitObjectResponse2\xb2\x01\n" +
	"\x0eObjNodeService\x12O\n" +
	"\bPutChunk\x12 .CloudStorage.v1.PutChunkRequest\x1a!.CloudStorage.v1.PutChunkResponse\x12O\n" +
	"\bGetChunk\x12 .CloudStorage.v1.GetChunkRequest\x1a!.CloudStorage.v1.GetChunkResponseB\x1eZ\x1cCloudStorage/pkg/api/gen;genb\x06proto3"

var (
	file_objectstore_proto_rawDescOnce sync.Once
	file_objectstore_proto_rawDescData []byte
)

func file_objectstore_proto_rawDescGZIP() []byte {
	file_objectstore_proto_rawDescOnce.Do(func() {
		file_objectstore_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_objectstore_proto_rawDesc), len(file_objectstore_proto_rawDesc)))
	})
	return file_objectstore_proto_rawDescData
}

var file_objectstore_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_objectstore_proto_goTypes = []any{
	(*Node)(nil),                      // 0: CloudStorage.v1.Node
	(*ChunkRef)(nil),                  // 1: CloudStorage.v1.ChunkRef
	(*Placement)(nil),                 // 2: CloudStorage.v1.Placement
	(*PutObjectRequest)(nil),          // 3: CloudStorage.v1.PutObjectRequest
	(*PutObjectResponse)(nil),         // 4: CloudStorage.v1.PutObjectResponse
	(*CommitObjectRequest)(nil),       // 5: CloudStorage.v1.CommitObjectRequest
	(*CommitObjectResponse)(nil),      // 6: CloudStorage.v1.CommitObjectResponse
	(*AllocatePlacementRequest)(nil),  // 7: CloudStorage.v1.AllocatePlacementRequest
	(*AllocatePlacementResponse)(nil), // 8: CloudStorage.v1.AllocatePlacementResponse
	(*PutChunkRequest)(nil),           // 9: CloudStorage.v1.PutChunkRequest
	(*PutChunkResponse)(nil),          // 10: CloudStorage.v1.PutChunkResponse
	(*GetChunkRequest)(nil),           // 11: CloudStorage.v1.GetChunkRequest
	(*GetChunkResponse)(nil),          // 12: CloudStorage.v1.GetChunkResponse
}
var file_objectstore_proto_depIdxs = []int32{
	0,  // 0: CloudStorage.v1.Placement.data_nodes:type_name -> CloudStorage.v1.Node
	0,  // 1: CloudStorage.v1.Placement.parity_nodes:type_name -> CloudStorage.v1.Node
	1,  // 2: CloudStorage.v1.CommitObjectRequest.chunks:type_name -> CloudStorage.v1.ChunkRef
	2,  // 3: CloudStorage.v1.AllocatePlacementResponse.placement:type_name -> CloudStorage.v1.Placement
	7,  // 4: CloudStorage.v1.MetaService.AllocatePlacement:input_type -> CloudStorage.v1.AllocatePlacementRequest
	3,  // 5: CloudStorage.v1.MetaService.PutObject:input_type -> CloudStorage.v1.PutObjectRequest
	5,  // 6: CloudStorage.v1.MetaService.CommitObject:input_type -> CloudStorage.v1.CommitObjectRequest
	9,  // 7: CloudStorage.v1.ObjNodeService.PutChunk:input_type -> CloudStorage.v1.PutChunkRequest
	11, // 8: CloudStorage.v1.ObjNodeService.GetChunk:input_type -> CloudStorage.v1.GetChunkRequest
	8,  // 9: CloudStorage.v1.MetaService.AllocatePlacement:output_type -> CloudStorage.v1.AllocatePlacementResponse
	4,  // 10: CloudStorage.v1.MetaService.PutObject:output_type -> CloudStorage.v1.PutObjectResponse
	6,  // 11: CloudStorage.v1.MetaService.CommitObject:output_type -> CloudStorage.v1.CommitObjectResponse
	10, // 12: CloudStorage.v1.ObjNodeService.PutChunk:output_type -> CloudStorage.v1.PutChunkResponse
	12, // 13: CloudStorage.v1.ObjNodeService.GetChunk:output_type -> CloudStorage.v1.GetChunkResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_objectstore_proto_init() }
func file_objectstore_proto_init() {
	if File_objectstore_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_objectstore_proto_rawDesc), len(file_objectstore_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_objectstore_proto_goTypes,
		DependencyIndexes: file_objectstore_proto_depIdxs,
		MessageInfos:      file_objectstore_proto_msgTypes,
	}.Build()
	File_objectstore_proto = out.File
	file_objectstore_proto_goTypes = nil
	file_objectstore_proto_depIdxs = nil
}
